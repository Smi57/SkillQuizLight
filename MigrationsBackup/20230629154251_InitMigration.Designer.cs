// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillQuizLight.Context;

#nullable disable

namespace SkillQuizLight.Migrations
{
    [DbContext(typeof(Db_SkillQuizLight))]
    [Migration("20230629154251_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkillQuizLight.Models.ExamAnswer", b =>
                {
                    b.Property<int>("ExamAnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamAnswerID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatUsr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamQuestionID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAnswerOk")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifUsr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("ExamAnswerID");

                    b.ToTable("ExamAnswer");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamDomain", b =>
                {
                    b.Property<int>("ExamDomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamDomainID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.HasKey("ExamDomainID");

                    b.ToTable("ExamDomain");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamDomain_SubDomain", b =>
                {
                    b.Property<int>("ExamDomain_SubDomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamDomain_SubDomainID"));

                    b.Property<int>("ExamDomainID")
                        .HasColumnType("int");

                    b.Property<int>("ExamSubDomainID")
                        .HasColumnType("int");

                    b.HasKey("ExamDomain_SubDomainID");

                    b.ToTable("ExamDomain_SubDomain");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamQuestion", b =>
                {
                    b.Property<int>("ExamQuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamQuestionID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("ParamQuestionLevelID")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ExamQuestionID");

                    b.ToTable("ExamQuestion");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamQuestion_Answer", b =>
                {
                    b.Property<int>("ExamQuestion_AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamQuestion_AnswerID"));

                    b.Property<int>("ExamAnswerID")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestionID")
                        .HasColumnType("int");

                    b.HasKey("ExamQuestion_AnswerID");

                    b.ToTable("ExamQuestion_Answer");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamQuestionnaire", b =>
                {
                    b.Property<int>("ExamQuestionnaireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamQuestionnaireID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamDomainID")
                        .HasColumnType("int");

                    b.Property<int>("ExamSubDomainID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("NbQuestion")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoint")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ExamQuestionnaireID");

                    b.ToTable("ExamQuestionnaire");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamQuestionnaire_Question", b =>
                {
                    b.Property<int>("ExamQuestionnaire_QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamQuestionnaire_QuestionID"));

                    b.Property<int>("ExamQuestionID")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestionnaireID")
                        .HasColumnType("int");

                    b.HasKey("ExamQuestionnaire_QuestionID");

                    b.ToTable("ExamQuestionnaire_Question");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamSubDomain", b =>
                {
                    b.Property<int>("ExamSubDomainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamSubDomainID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.HasKey("ExamSubDomainID");

                    b.ToTable("ExamSubDomain");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamTest", b =>
                {
                    b.Property<int>("ExamTestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTestID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsQuestionRevise")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithChrono")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("NbQuestionRevise")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoint")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnType("int");

                    b.HasKey("ExamTestID");

                    b.ToTable("ExamTest");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ExamTest_Questionnaire", b =>
                {
                    b.Property<int>("ExamTest_QuestionnaireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTest_QuestionnaireID"));

                    b.Property<int>("ExamQuestionnaireID")
                        .HasColumnType("int");

                    b.Property<int>("ExamTestID")
                        .HasColumnType("int");

                    b.HasKey("ExamTest_QuestionnaireID");

                    b.ToTable("ExamTest_Questionnaire");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ParamAnswerLevel", b =>
                {
                    b.Property<int>("ParamAnswerLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParamAnswerLevelID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("NbPoint")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ParamAnswerLevelID");

                    b.ToTable("ParamAnswerLevel");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ParamLang", b =>
                {
                    b.Property<int>("ParamLangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParamLangID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.HasKey("ParamLangID");

                    b.ToTable("ParamLang");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ParamQuestionLevel", b =>
                {
                    b.Property<int>("ParamQuestionLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParamQuestionLevelID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("NbPoint")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ParamQuestionLevelID");

                    b.ToTable("ParamQuestionLevel");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ParamTestStatus", b =>
                {
                    b.Property<int>("ParamTestStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParamTestStatusID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.HasKey("ParamTestStatusID");

                    b.ToTable("ParamTestStatus");
                });

            modelBuilder.Entity("SkillQuizLight.Models.ParamUsrType", b =>
                {
                    b.Property<int>("UsrTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrTypeID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.HasKey("UsrTypeID");

                    b.ToTable("ParamUsrType");
                });

            modelBuilder.Entity("SkillQuizLight.Models.Usr", b =>
                {
                    b.Property<int>("UsrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrID"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsrID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActivate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsrID")
                        .HasColumnType("int");

                    b.Property<int>("ParamLangID")
                        .HasColumnType("int");

                    b.Property<int>("ParamUsrTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsrID");

                    b.ToTable("Usr");
                });

            modelBuilder.Entity("SkillQuizLight.Models.UsrAnswer", b =>
                {
                    b.Property<int>("UsrAnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrAnswerID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamQuestion_AnswerID")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestionnaire_QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("ExamTest_QuestionnaireID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<int>("ParamAnswerLevelID")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("UsrExamID")
                        .HasColumnType("int");

                    b.HasKey("UsrAnswerID");

                    b.ToTable("UsrAnswer");
                });

            modelBuilder.Entity("SkillQuizLight.Models.UsrExam", b =>
                {
                    b.Property<int>("UsrExamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrExamID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamTest_QuestionnaireID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParamTestStatusID")
                        .HasColumnType("int");

                    b.Property<int>("UsrID")
                        .HasColumnType("int");

                    b.HasKey("UsrExamID");

                    b.ToTable("UsrExam");
                });

            modelBuilder.Entity("SkillQuizLight.Models.UsrQuestion", b =>
                {
                    b.Property<int>("UsrQuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsrQuestionID"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatUsr")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestion_AnswerID")
                        .HasColumnType("int");

                    b.Property<int>("ExamQuestionnaire_QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("ExamTest_QuestionnaireID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifUsr")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeOpen")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsrExamID")
                        .HasColumnType("int");

                    b.HasKey("UsrQuestionID");

                    b.ToTable("UsrQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
